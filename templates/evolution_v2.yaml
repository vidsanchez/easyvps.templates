metadata:
  name: Evolution API v2
  icon: evolution.png
  description: Evolution API v2 es una plataforma de código abierto diseñada para facilitar la integración de WhatsApp en sistemas de mensajería y automatización empresarial. Compatible tanto con la API oficial de WhatsApp Business como con la basada en Baileys, permite enviar y recibir mensajes, gestionar contactos y grupos, y automatizar flujos de trabajo mediante integraciones con herramientas como Typebot, Chatwoot, OpenAI y Dify.
  version: 1.0.0
  category: WhatsApp
  dependencies:
  - Redis
  - Postgres / Pgvector
  required_networks:
  - network_public
  user_fields:
  - field: username
    label: Username
    type: string
    required: true
    default: 'postgres'
    description: El usuario para acceder a Postgress
    validation:
      pattern: null
      min_length: null
      max_length: null
  - field: password
    label: Password
    type: password
    required: true
    default: ''
    description: El password para acceder a Postgress además de la API de Evolution.
    validation:
      pattern: null
      min_length: 8
      max_length: 100
  - field: subdominio
    label: Subdominio
    type: string
    required: true
    default: 'evoapi.midominio.com'
    description: Introduzca el subdominio que utilizará Evolution API v2.
    validation:
      pattern: ^(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,}$
      min_length: null
      max_length: null
  - field: cpus
    label: CPUs
    type: number
    required: true
    default: 1
    description: Número de CPUs a asignar al contenedor.
    validation:
      pattern: null
      min_length: null
      max_length: null
  - field: memory
    label: Memoria
    type: number
    required: true
    default: 1024
    description: Memoria a asignar al contenedor (en MB).
    validation:
      pattern: null
      min_length: null
      max_length: null
  tags:
  - evolution v2
template:
  version: "3.7"

  services:
    # Servicio para conversión de audios
    evolution_audio_converter:
      image: atendai/evolution-audio-converter:latest
      networks:
        - network_public
      environment:
        - PORT=4040
        - API_KEY=[[password]]
    # Servicio de Evolution API
    evolution_api_v2:
      image: atendai/evolution-api:latest
      volumes:
        - evolutionv2_instances:/evolution/instances
      networks:
        - network_public
      environment:
        # Configurar el servidor
        - SERVER_TYPE=http
        - SERVER_PORT=8080
        # Configurar la url de evolution
        - SERVER_URL=https://[[subdominio]]
        # Configurar Sentry DNS
        #- SENTRY_DSN=
        # Configurar CORS
        - CORS_ORIGIN=*
        - CORS_METHODS=GET,POST,PUT,DELETE
        - CORS_CREDENTIALS=true 
        # Determina los logs que serán mostrados (ERROR,WARN,DEBUG,INFO,LOG,VERBOSE,DARK,WEBHOOKS,WEBSOCKET)
        - LOG_LEVEL=ERROR,WARN
        - LOG_COLOR=true
        # Determina los logs de Baileys que serán mostrados ("fatal" | "error" | "warn" | "info" | "debug" | "trace")
        - LOG_BAILEYS=error
        # Establecer el número máximo de oyentes que se pueden registrar para un evento
        - EVENT_EMITTER_MAX_LISTENERS=50
        # Determina si se elimarán las instancias no conectadas
        - DEL_INSTANCE=false
        # Determina la base de datos a utiliazar: postgresql | mysql
        - DATABASE_PROVIDER=postgresql
        # URI de conexión con la base de datos
        - DATABASE_CONNECTION_URI=postgresql://[[username]]:[[password]]@postgres:5432/evolution_api?schema=public
        # Nombre del cliente para la conexión a la base de datos.
        # Se utiliza para separar una instalación de la API de otra que usa la misma base de datos.
        - DATABASE_CONNECTION_CLIENT_NAME=evolution_api
        # Establece las informaciones que se guardan en la DB
        - DATABASE_SAVE_DATA_INSTANCE=true
        - DATABASE_SAVE_DATA_NEW_MESSAGE=true
        - DATABASE_SAVE_MESSAGE_UPDATE=true
        - DATABASE_SAVE_DATA_CONTACTS=true
        - DATABASE_SAVE_DATA_CHATS=true
        - DATABASE_SAVE_DATA_LABELS=true
        - DATABASE_SAVE_DATA_HISTORIC=true
        - DATABASE_SAVE_IS_ON_WHATSAPP=true
        - DATABASE_SAVE_IS_ON_WHATSAPP_DAYS=7
        - DATABASE_DELETE_MESSAGE=true
        # Configurar RabbitMQ
        - RABBITMQ_ENABLED=false
        - RABBITMQ_URI=amqp://[[username]]:[[password]]@rabbitmq:5672/default
        - RABBITMQ_EXCHANGE_NAME=evolution_exchange
        # Al habilitar esta variable, los eventos de todas las instancias se envían a la misma fila de eventos.
        - RABBITMQ_GLOBAL_ENABLED=false
        # Establece los eventos que se envían a RabbitMQ
        - RABBITMQ_EVENTS_APPLICATION_STARTUP=false
        - RABBITMQ_EVENTS_INSTANCE_CREATE=false
        - RABBITMQ_EVENTS_INSTANCE_DELETE=false
        - RABBITMQ_EVENTS_QRCODE_UPDATED=false
        - RABBITMQ_EVENTS_MESSAGES_SET=false
        - RABBITMQ_EVENTS_MESSAGES_UPSERT=false
        - RABBITMQ_EVENTS_MESSAGES_EDITED=false
        - RABBITMQ_EVENTS_MESSAGES_UPDATE=false
        - RABBITMQ_EVENTS_MESSAGES_DELETE=false
        - RABBITMQ_EVENTS_SEND_MESSAGE=false
        - RABBITMQ_EVENTS_CONTACTS_SET=false
        - RABBITMQ_EVENTS_CONTACTS_UPSERT=false
        - RABBITMQ_EVENTS_CONTACTS_UPDATE=false
        - RABBITMQ_EVENTS_PRESENCE_UPDATE=false
        - RABBITMQ_EVENTS_CHATS_SET=false
        - RABBITMQ_EVENTS_CHATS_UPSERT=false
        - RABBITMQ_EVENTS_CHATS_UPDATE=false
        - RABBITMQ_EVENTS_CHATS_DELETE=false
        - RABBITMQ_EVENTS_GROUPS_UPSERT=false
        - RABBITMQ_EVENTS_GROUP_UPDATE=false
        - RABBITMQ_EVENTS_GROUP_PARTICIPANTS_UPDATE=false
        - RABBITMQ_EVENTS_CONNECTION_UPDATE=false
        - RABBITMQ_EVENTS_REMOVE_INSTANCE=false
        - RABBITMQ_EVENTS_LOGOUT_INSTANCE=false
        - RABBITMQ_EVENTS_CALL=false
        - RABBITMQ_EVENTS_TYPEBOT_START=false
        - RABBITMQ_EVENTS_TYPEBOT_CHANGE_STATUS=false
        # Configurar SQS
        - SQS_ENABLED=false
        - SQS_ACCESS_KEY_ID=
        - SQS_SECRET_ACCESS_KEY=
        - SQS_ACCOUNT_ID=
        - SQS_REGION=
        # Configurar websocket
        - WEBSOCKET_ENABLED=false
        - WEBSOCKET_GLOBAL_EVENTS=false
        # Configuración de Pusher (plataforma de websocket)
        - PUSHER_ENABLED=false
        - PUSHER_GLOBAL_ENABLED=false
        - PUSHER_GLOBAL_APP_ID=
        - PUSHER_GLOBAL_KEY=
        - PUSHER_GLOBAL_SECRET=
        - PUSHER_GLOBAL_CLUSTER=
        - PUSHER_GLOBAL_USE_TLS=true
        # Establece los eventos que se enviarán a Pusher
        - PUSHER_EVENTS_APPLICATION_STARTUP=false
        - PUSHER_EVENTS_QRCODE_UPDATED=false
        - PUSHER_EVENTS_MESSAGES_SET=false
        - PUSHER_EVENTS_MESSAGES_UPSERT=false
        - PUSHER_EVENTS_MESSAGES_EDITED=false
        - PUSHER_EVENTS_MESSAGES_UPDATE=false
        - PUSHER_EVENTS_MESSAGES_DELETE=false
        - PUSHER_EVENTS_SEND_MESSAGE=false
        - PUSHER_EVENTS_CONTACTS_SET=false
        - PUSHER_EVENTS_CONTACTS_UPSERT=false
        - PUSHER_EVENTS_CONTACTS_UPDATE=false
        - PUSHER_EVENTS_PRESENCE_UPDATE=false
        - PUSHER_EVENTS_CHATS_SET=false
        - PUSHER_EVENTS_CHATS_UPSERT=false
        - PUSHER_EVENTS_CHATS_UPDATE=false
        - PUSHER_EVENTS_CHATS_DELETE=false
        - PUSHER_EVENTS_GROUPS_UPSERT=false
        - PUSHER_EVENTS_GROUPS_UPDATE=false
        - PUSHER_EVENTS_GROUP_PARTICIPANTS_UPDATE=false
        - PUSHER_EVENTS_CONNECTION_UPDATE=false
        - PUSHER_EVENTS_LABELS_EDIT=false
        - PUSHER_EVENTS_LABELS_ASSOCIATION=false
        - PUSHER_EVENTS_CALL=false
        - PUSHER_EVENTS_TYPEBOT_START=false
        - PUSHER_EVENTS_TYPEBOT_CHANGE_STATUS=false
        # Configurar API oficial de WhatsApp
        - WA_BUSINESS_TOKEN_WEBHOOK=evolution
        - WA_BUSINESS_URL=https://graph.facebook.com
        - WA_BUSINESS_VERSION=v20.0
        - WA_BUSINESS_LANGUAGE=en_US
        # Configurar el webhook global
        - WEBHOOK_GLOBAL_ENABLED=false
        - WEBHOOK_GLOBAL_URL=''
        - WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=false
        # Establece los eventos que se enviarán a la URL de Webhooks
        - WEBHOOK_EVENTS_APPLICATION_STARTUP=false
        - WEBHOOK_EVENTS_QRCODE_UPDATED=true
        - WEBHOOK_EVENTS_MESSAGES_SET=true
        - WEBHOOK_EVENTS_MESSAGES_UPSERT=true
        - WEBHOOK_EVENTS_MESSAGES_EDITED=true
        - WEBHOOK_EVENTS_MESSAGES_UPDATE=true
        - WEBHOOK_EVENTS_MESSAGES_DELETE=true
        - WEBHOOK_EVENTS_SEND_MESSAGE=true
        - WEBHOOK_EVENTS_CONTACTS_SET=true
        - WEBHOOK_EVENTS_CONTACTS_UPSERT=true
        - WEBHOOK_EVENTS_CONTACTS_UPDATE=true
        - WEBHOOK_EVENTS_PRESENCE_UPDATE=true
        - WEBHOOK_EVENTS_CHATS_SET=true
        - WEBHOOK_EVENTS_CHATS_UPSERT=true
        - WEBHOOK_EVENTS_CHATS_UPDATE=true
        - WEBHOOK_EVENTS_CHATS_DELETE=true
        - WEBHOOK_EVENTS_GROUPS_UPSERT=true
        - WEBHOOK_EVENTS_GROUPS_UPDATE=true
        - WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE=true
        - WEBHOOK_EVENTS_CONNECTION_UPDATE=true
        - WEBHOOK_EVENTS_REMOVE_INSTANCE=false
        - WEBHOOK_EVENTS_LOGOUT_INSTANCE=false
        - WEBHOOK_EVENTS_LABELS_EDIT=true
        - WEBHOOK_EVENTS_LABELS_ASSOCIATION=true
        - WEBHOOK_EVENTS_CALL=true
        # Este evento se usa con Typebot
        - WEBHOOK_EVENTS_TYPEBOT_START=false
        - WEBHOOK_EVENTS_TYPEBOT_CHANGE_STATUS=false
        # Este evento envía errores
        - WEBHOOK_EVENTS_ERRORS=false
        - WEBHOOK_EVENTS_ERRORS_WEBHOOK=
        # Información que se mostrará en los smartphones
        - CONFIG_SESSION_PHONE_CLIENT=Evolution API
        # Nombre del navegador: Chrome | Firefox | Edge | Opera | Safari
        - CONFIG_SESSION_PHONE_NAME=Chrome
        # Versión web de WhatsApp para el canal de Baileys.
        # Verificar versión aquí: https://web.whatsapp.com/check-update?version=0&platform=web
        - CONFIG_SESSION_PHONE_VERSION=2.3000.1015901307
        # Configurar el QR code
        - QRCODE_LIMIT=30
        # Color del QR code
        - QRCODE_COLOR=#000000
        # Determina si se instalan los componentes necesarios para usar Typebot
        - TYPEBOT_ENABLED=true
        # Establece la versión de la API de Typebot: old | latest
        - TYPEBOT_API_VERSION=latest
        # Determina si se instalan los componentes necesarios para usar Chatwoot
        - CHATWOOT_ENABLED=true
        # Si dejas esta opción en true, al enviar un mensaje en Chatwoot, el último mensaje del cliente se marcará como leído en WhatsApp.
        - CHATWOOT_MESSAGE_READ=false
        # Si dejas esta opción en false, al eliminar el mensaje para todos en WhatsApp, no se eliminará en Chatwoot.
        - CHATWOOT_MESSAGE_DELETE=false
        # Si dejas esta opción en true, se creará un contacto en Chatwoot para proporcionar el código QR y actualizar los mensajes sobre la instancia.
        - CHATWOOT_BOT_CONTACT=true
        # URI de conexión a la DB de Chatwoot para sincronizar historial de mensajes
        - CHATWOOT_IMPORT_DATABASE_CONNECTION_URI=postgresql://[[username]]:[[password]]@postgres:5432/chatwoot_db?sslmode=disable
        - CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE=true
        # Determina si se instalan los componentes necesarios para usar OpenAI
        - OPENAI_ENABLED=true
        # Determina si se instalan los componentes necesarios para usar Dify
        - DIFY_ENABLED=true
        # Configuración de Redis para caché
        - CACHE_REDIS_ENABLED=true
        - CACHE_REDIS_URI=redis://redis:6379/7
        - CACHE_REDIS_TTL=604800
        # El prefijo sirve para diferenciar los datos de una instalación a otra que están utilizando el mismo Redis.
        - CACHE_REDIS_PREFIX_KEY=evolution_api
        # Habilitar esta variable guardará la información de conexión en Redis y no en la base de datos.
        - CACHE_REDIS_SAVE_INSTANCES=false
        # Habilitar caché local
        - CACHE_LOCAL_ENABLED=false
        # Configuraciones Amazon S3 / Minio
        - S3_ENABLED=false
        - S3_BUCKET=evolution
        - S3_ACCESS_KEY=
        - S3_SECRET_KEY=
        - S3_PORT=443
        - S3_ENDPOINT=s3.amazonaws.com # region: s3.eu-west-3.amazonaws.com
        - S3_REGION=eu-west-3
        - S3_USE_SSL=true
        # Configuraciones Evolution Audio Converter, ver proyecto: https://github.com/EvolutionAPI/evolution-audio-converter
        - API_AUDIO_CONVERTER=http://evolution_audio_converter:4040/process-audio
        - API_AUDIO_CONVERTER_KEY=[[password]]
        # Defini el apikey global de Evolution API para administrar todas las instancias.
        - AUTHENTICATION_API_KEY=[[password]]
        # Si dejas esta opción en true, las instancias se expondrán en el endpoint de obtener instancias.
        - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true
        - LANGUAGE=es
        # Define un proxy global que se utilizará si la instancia no tiene uno.
        #- PROXY_HOST=
        #- PROXY_PORT=80
        #- PROXY_PROTOCOL=http
        #- PROXY_USERNAME=
        #- PROXY_PASSWORD=
      deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints:
            - node.role == manager
        resources:
          limits:
            cpus: "[[cpus]]"
            memory: "[[memory]]M"
        labels:
          - traefik.enable=true
          - traefik.http.routers.evolution_api_v2.rule=Host(`[[subdominio]]`)
          - traefik.http.routers.evolution_api_v2.entrypoints=websecure
          - traefik.http.routers.evolution_api_v2.tls.certresolver=letsencryptresolver
          - traefik.http.routers.evolution_api_v2.priority=1
          - traefik.http.routers.evolution_api_v2.service=evolution_api_v2
          - traefik.http.services.evolution_api_v2.loadbalancer.server.port=8080
          - traefik.http.services.evolution_api_v2.loadbalancer.passHostHeader=true

  volumes:
    evolutionv2_instances:
      external: true
      name: evolutionv2_instances

  networks:
    network_public:
      external: true
      name: network_public
